{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["TodoFilter","handleQuery","handleOption","useState","query","setQuery","selectedOption","setSelectedOption","className","value","onChange","event","newOption","target","booleanOption","type","placeholder","newValue","onClick","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todo","closeModal","user","setUser","useEffect","userId","id","title","completed","href","email","name","filteredTodosList","todos","filter","toLocaleLowerCase","includes","trim","TodoList","todoList","modalActive","option","activeTaskId","filteredTodos","map","Fragment","isDone","classNames","App","loading","setLoading","list","setList","task","setTask","setOption","catch","error","console","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd925482.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\ntype Props = {\n  handleQuery: (value: string) => void;\n  handleOption: (value: boolean | null) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ handleQuery, handleOption }) => {\n  const [query, setQuery] = useState('');\n  const [selectedOption, setSelectedOption] = useState<string | null>(null);\n\n  const handleQueryValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n\n    setQuery(newValue);\n    handleQuery(newValue);\n  };\n\n  const handleClearQuery = () => {\n    setQuery('');\n    handleQuery('');\n  };\n\n  const handleOptions = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newOption = event.target.value;\n\n    setSelectedOption(newOption);\n\n    let booleanOption: boolean | null = null;\n\n    switch (newOption) {\n      case 'all':\n        booleanOption = null;\n        break;\n      case 'active':\n        booleanOption = false;\n        break;\n      case 'completed':\n        booleanOption = true;\n        break;\n      default:\n        booleanOption = null;\n    }\n\n    handleOption(booleanOption);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedOption || ''}\n            onChange={handleOptions}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryValue}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-search\" />\n        </span>\n\n        <span className=\"icon is-right\">\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearQuery}\n              aria-label=\"Clear search\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useEffect, useState } from 'react';\n\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  closeModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, [todo.userId]);\n\n  const getTodoStatus = () => {\n    if (todo.completed) {\n      return (\n        <strong className=\"has-text-success\">Done</strong>\n      );\n    }\n\n    return (\n      <strong className=\"has-text-danger\">Planned</strong>\n    );\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo?.id}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n              aria-label=\"Close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {getTodoStatus()}\n              {' '}\n              by\n              {' '}\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype ListOfTodos = {\n  todoList: Todo[],\n  modalActive: (todo: Todo) => void;\n  query: string;\n  option: boolean | null;\n  activeTaskId: number | null;\n};\n\nconst filteredTodosList = (value: string, todos: Todo[]) => {\n  return todos.filter(todo => todo.title\n    .toLocaleLowerCase().includes(value.trim().toLocaleLowerCase()));\n};\n\nexport const TodoList: React.FC<ListOfTodos>\n= ({\n  todoList, modalActive, query, option, activeTaskId,\n}) => {\n  const isDoneStyle = (isDone: boolean) => {\n    return classNames({\n      'has-text-danger': !isDone,\n      'has-text-success': isDone,\n    });\n  };\n\n  let filteredTodos: Todo[] = [];\n\n  if (option === null) {\n    filteredTodos = filteredTodosList(query, todoList);\n  } else if (option) {\n    filteredTodos\n     = filteredTodosList(query, todoList)\n        .filter(todo => todo.completed === true);\n  } else {\n    filteredTodos\n    = filteredTodosList(query, todoList)\n        .filter(todo => todo.completed === false);\n  }\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map(todo => (\n          <React.Fragment key={todo.id}>\n            <tr data-cy=\"todo\" className=\"\">\n              <td className=\"is-vcentered\">{todo.id}</td>\n              {todo.completed\n                ? (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                )\n                : <td className=\"is-vcentered\" />}\n              <td className=\"is-vcentered is-expanded\">\n                <p className={isDoneStyle(todo.completed)}>{todo.title}</p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => modalActive(todo)}\n                >\n                  <span className=\"icon\">\n                    {activeTaskId === todo.id ? (\n                      <i className=\"far fa-eye-slash\" />\n                    ) : (\n                      <i className=\"far fa-eye\" />\n                    )}\n                  </span>\n                </button>\n              </td>\n            </tr>\n          </React.Fragment>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { TodoList } from './components/TodoList';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState<Todo[]>([]);\n  const [task, setTask] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [option, setOption] = useState<boolean | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then((todos) => {\n        setList(todos);\n        setLoading(false);\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.error('Something bad happened!', error);\n        setLoading(false);\n      });\n  }, []);\n\n  const modalActive = (todo: Todo) => {\n    setTask(todo);\n  };\n\n  const closeModal = () => {\n    setTask(null);\n  };\n\n  const handleQuery = (value: string) => {\n    setQuery(value);\n  };\n\n  const handleOption = (value: boolean | null) => {\n    setOption(value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            <div className=\"block\">\n              <TodoFilter handleQuery={handleQuery} handleOption={handleOption} />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n\n              <TodoList\n                todoList={list}\n                modalActive={(todo: Todo) => modalActive(todo)}\n                query={query}\n                option={option}\n                activeTaskId={task?.id || null}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {task && <TodoModal todo={task} closeModal={closeModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}